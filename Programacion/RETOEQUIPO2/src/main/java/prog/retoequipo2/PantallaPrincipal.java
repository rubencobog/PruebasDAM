package prog.retoequipo2;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.io.File;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.TreeSet;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DAM126
 */
public class PantallaPrincipal extends javax.swing.JFrame {

    private UsuarioDAO usuarios = new UsuarioDAO();
    private RutasDAO rutas = new RutasDAO();
    private MetodosDAO metodos = new MetodosDAO();
    private Usuario user = null;
    private Ruta ruta = null;

    /**
     * Creates new form PantallaPrincipal
     */
    public PantallaPrincipal() {
        initComponents();
        setResizable(false);
        this.setSize(800, 600);
        this.setLocationRelativeTo(null);
        PantallaPrinci.setVisible(true);
        PantallaCrearRuta.setVisible(false);
        PantallaMenu.setVisible(false);
        PantallaRegistro.setVisible(false);
        PantallaValidarRutas.setVisible(false);
        PantallaValidarUsuarios.setVisible(false);
        PantallaVerRutas.setVisible(false);
        PantallaValoracion.setVisible(false);
        PantallaResena.setVisible(false);
        PantallaPuntoInteres.setVisible(false);
        PantallaPuntoPeligro.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DialogInsertarActividad = new javax.swing.JDialog();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        txtNomActividad = new javax.swing.JTextField();
        jScrollPane12 = new javax.swing.JScrollPane();
        txtDescripcionActividad = new javax.swing.JTextArea();
        btnSubmitActividad = new javax.swing.JButton();
        DialogInsertarPeriodo = new javax.swing.JDialog();
        jButton1 = new javax.swing.JButton();
        DialogPuntosRuta = new javax.swing.JDialog();
        jScrollPane13 = new javax.swing.JScrollPane();
        TablaPuntosRuta = new javax.swing.JTable();
        LabelNomRuta = new javax.swing.JLabel();
        PantallaPrinci = new javax.swing.JPanel();
        btnIniciarSesion = new javax.swing.JButton();
        btnVerRutas = new javax.swing.JButton();
        PantallaVerRutas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaRutas = new javax.swing.JTable();
        btnResena = new javax.swing.JButton();
        btnValoracion = new javax.swing.JButton();
        btnVolverVerRutas = new javax.swing.JButton();
        btnBorrarRuta = new javax.swing.JButton();
        btnModificaRuta = new javax.swing.JButton();
        FiltroOrdenaCombo = new javax.swing.JComboBox<>();
        btnPuntoPeligro = new javax.swing.JButton();
        btnPuntoInteres = new javax.swing.JButton();
        btnInsertaActividad = new javax.swing.JButton();
        btnPeriodo = new javax.swing.JButton();
        btnListarPuntos = new javax.swing.JButton();
        PantallaRegistro = new javax.swing.JPanel();
        textUsuario = new javax.swing.JTextField();
        btnEnviarInicioSesion = new javax.swing.JButton();
        textPassword = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        PantallaMenu = new javax.swing.JPanel();
        btnVerRuta2 = new javax.swing.JButton();
        btnCrearRuta = new javax.swing.JButton();
        btnDescargarFicha = new javax.swing.JButton();
        btnCrearCalendar = new javax.swing.JButton();
        btnValidarRuta = new javax.swing.JButton();
        btnValidarUsuario = new javax.swing.JButton();
        PantallaValidarRutas = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaRutasNoValidadas = new javax.swing.JTable();
        btnValidaRUTA = new javax.swing.JButton();
        btnVolverValidaRutas = new javax.swing.JButton();
        PantallaValidarUsuarios = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaUsuarios = new javax.swing.JTable();
        btnValidarUsuarios = new javax.swing.JButton();
        btnVolverValidaUsuario = new javax.swing.JButton();
        PantallaCrearRuta = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtRecomendacion = new javax.swing.JTextArea();
        txtNomRuta = new javax.swing.JTextField();
        txtZonaGeo = new javax.swing.JTextField();
        txtURL = new javax.swing.JTextField();
        txtLongIni = new javax.swing.JTextField();
        txtLatIni = new javax.swing.JTextField();
        txtLongFinal = new javax.swing.JTextField();
        txtLatFin = new javax.swing.JTextField();
        txtDistancia = new javax.swing.JTextField();
        txtLatMaxima = new javax.swing.JTextField();
        txtDuracion = new javax.swing.JTextField();
        txtLongMaxima = new javax.swing.JTextField();
        ClasificacionCombo = new javax.swing.JComboBox<>();
        txtDesnivel = new javax.swing.JTextField();
        TerrenoCombo = new javax.swing.JComboBox<>();
        AccesibleCombo = new javax.swing.JComboBox<>();
        IndicacionesCombo = new javax.swing.JComboBox<>();
        FamiliarCombo = new javax.swing.JComboBox<>();
        btnSubmitRuta = new javax.swing.JButton();
        btnVolverCrearRuta = new javax.swing.JButton();
        btnSubmitModificacion = new javax.swing.JButton();
        jLabel49 = new javax.swing.JLabel();
        PeriodosCombo = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        PantallaValoracion = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtValoracion = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtValoracionTecnica = new javax.swing.JTextArea();
        valoDificutadCombo = new javax.swing.JComboBox<>();
        valoInteresCombo = new javax.swing.JComboBox<>();
        valoBellezaCombo = new javax.swing.JComboBox<>();
        btnSubmitValo = new javax.swing.JButton();
        btnVolverValoracion = new javax.swing.JButton();
        PantallaResena = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtResena = new javax.swing.JTextArea();
        btnSubmitResena = new javax.swing.JButton();
        btnVolverResena = new javax.swing.JButton();
        PantallaPuntoInteres = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtDescripcionPuntoInteres = new javax.swing.JTextArea();
        jLabel36 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtCaracteristicasPuntoInteres = new javax.swing.JTextArea();
        TipoPuntoInteresCombo = new javax.swing.JComboBox<>();
        txtNomPuntoInteres = new javax.swing.JTextField();
        txtFechaPuntoInteres = new javax.swing.JTextField();
        txtNumPuntoInteres = new javax.swing.JTextField();
        txtHoraPuntoInteres = new javax.swing.JTextField();
        txtLatitudPuntoInteres = new javax.swing.JTextField();
        txtLongitudPuntoInteres = new javax.swing.JTextField();
        btnSubmitPuntoInteres = new javax.swing.JButton();
        btnVolverPuntoInteres = new javax.swing.JButton();
        PantallaPuntoPeligro = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        txtDescripcionPuntoPeligro = new javax.swing.JTextArea();
        jLabel45 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        txtDescripcionGravedadPuntoPeligro = new javax.swing.JTextArea();
        txtNomPuntoPeligro = new javax.swing.JTextField();
        txtFechaPuntoPeligro = new javax.swing.JTextField();
        txtNumPuntoPeligro = new javax.swing.JTextField();
        txtHoraPuntoPeligro = new javax.swing.JTextField();
        txtLatitudPuntoPeligro = new javax.swing.JTextField();
        txtLongitudPuntoPeligro = new javax.swing.JTextField();
        btnSubmitPuntoPeligro = new javax.swing.JButton();
        btnVolverPuntoPeligro = new javax.swing.JButton();
        txtkmPuntoPeligro = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        nivelGravedadCombo = new javax.swing.JComboBox<>();

        DialogInsertarActividad.setTitle("Inserta Actividad");
        DialogInsertarActividad.setSize(new java.awt.Dimension(800, 600));

        jLabel47.setText("Nombre de la actividad:");

        jLabel48.setText("Descripcion de la actividad:");

        txtDescripcionActividad.setColumns(20);
        txtDescripcionActividad.setRows(5);
        jScrollPane12.setViewportView(txtDescripcionActividad);

        btnSubmitActividad.setText("Enviar");
        btnSubmitActividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActividadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DialogInsertarActividadLayout = new javax.swing.GroupLayout(DialogInsertarActividad.getContentPane());
        DialogInsertarActividad.getContentPane().setLayout(DialogInsertarActividadLayout);
        DialogInsertarActividadLayout.setHorizontalGroup(
            DialogInsertarActividadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogInsertarActividadLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(DialogInsertarActividadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSubmitActividad)
                    .addGroup(DialogInsertarActividadLayout.createSequentialGroup()
                        .addGroup(DialogInsertarActividadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel47)
                            .addComponent(jLabel48))
                        .addGap(89, 89, 89)
                        .addGroup(DialogInsertarActividadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                            .addComponent(txtNomActividad))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        DialogInsertarActividadLayout.setVerticalGroup(
            DialogInsertarActividadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogInsertarActividadLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(DialogInsertarActividadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(txtNomActividad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(105, 105, 105)
                .addGroup(DialogInsertarActividadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(btnSubmitActividad)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout DialogInsertarPeriodoLayout = new javax.swing.GroupLayout(DialogInsertarPeriodo.getContentPane());
        DialogInsertarPeriodo.getContentPane().setLayout(DialogInsertarPeriodoLayout);
        DialogInsertarPeriodoLayout.setHorizontalGroup(
            DialogInsertarPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        DialogInsertarPeriodoLayout.setVerticalGroup(
            DialogInsertarPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jButton1.setText("jButton1");

        DialogPuntosRuta.setSize(new java.awt.Dimension(800, 600));

        jScrollPane13.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Puntos de Ruta")));
        jScrollPane13.setViewportView(TablaPuntosRuta);

        LabelNomRuta.setText("Ruta:");

        javax.swing.GroupLayout DialogPuntosRutaLayout = new javax.swing.GroupLayout(DialogPuntosRuta.getContentPane());
        DialogPuntosRuta.getContentPane().setLayout(DialogPuntosRutaLayout);
        DialogPuntosRutaLayout.setHorizontalGroup(
            DialogPuntosRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DialogPuntosRutaLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(LabelNomRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );
        DialogPuntosRutaLayout.setVerticalGroup(
            DialogPuntosRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogPuntosRutaLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(DialogPuntosRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelNomRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(79, Short.MAX_VALUE))
        );

        DialogPuntosRuta.getAccessibleContext().setAccessibleName("Ver puntos Ruta");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("VPrincipal");
        getContentPane().setLayout(new java.awt.CardLayout());

        PantallaPrinci.setPreferredSize(new java.awt.Dimension(800, 600));

        btnIniciarSesion.setText("Iniciar Sesion");
        btnIniciarSesion.setToolTipText("btnIniciarSesion");
        btnIniciarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarSesionActionPerformed(evt);
            }
        });

        btnVerRutas.setText("Ver Rutas");
        btnVerRutas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerRutasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PantallaPrinciLayout = new javax.swing.GroupLayout(PantallaPrinci);
        PantallaPrinci.setLayout(PantallaPrinciLayout);
        PantallaPrinciLayout.setHorizontalGroup(
            PantallaPrinciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PantallaPrinciLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnIniciarSesion)
                .addGap(75, 75, 75))
            .addGroup(PantallaPrinciLayout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(btnVerRutas, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(379, Short.MAX_VALUE))
        );
        PantallaPrinciLayout.setVerticalGroup(
            PantallaPrinciLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaPrinciLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnIniciarSesion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 245, Short.MAX_VALUE)
                .addComponent(btnVerRutas, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(187, 187, 187))
        );

        btnVerRutas.getAccessibleContext().setAccessibleName("BtnVerRutas");

        getContentPane().add(PantallaPrinci, "card2");

        PantallaVerRutas.setBorder(javax.swing.BorderFactory.createTitledBorder("Rutas"));
        PantallaVerRutas.setPreferredSize(new java.awt.Dimension(800, 600));

        jScrollPane1.setViewportView(TablaRutas);

        btnResena.setText("Reseñar Ruta");
        btnResena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResenaActionPerformed(evt);
            }
        });

        btnValoracion.setText("Dejar Valoracion");
        btnValoracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValoracionActionPerformed(evt);
            }
        });

        btnVolverVerRutas.setText("Volver");
        btnVolverVerRutas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverVerRutasActionPerformed(evt);
            }
        });

        btnBorrarRuta.setText("Borrar Ruta");
        btnBorrarRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarRutaActionPerformed(evt);
            }
        });

        btnModificaRuta.setText("Modificar ruta");
        btnModificaRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificaRutaActionPerformed(evt);
            }
        });

        FiltroOrdenaCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Filtros:", "Riesgo", "Duracion", "Distancia", "Tipo", "Inclusivas", "No inclusivas", "Familiares", "No familiares" }));
        FiltroOrdenaCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltroOrdenaComboActionPerformed(evt);
            }
        });

        btnPuntoPeligro.setText("Añadir Punto de Peligro");
        btnPuntoPeligro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPuntoPeligroActionPerformed(evt);
            }
        });

        btnPuntoInteres.setText("Añadir Punto de Interés");
        btnPuntoInteres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPuntoInteresActionPerformed(evt);
            }
        });

        btnInsertaActividad.setText("Añadir Actividad de la ruta");
        btnInsertaActividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertaActividadActionPerformed(evt);
            }
        });

        btnPeriodo.setText("Añadir Periodo recomendado");

        btnListarPuntos.setText("Listar puntos de Ruta");
        btnListarPuntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarPuntosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PantallaVerRutasLayout = new javax.swing.GroupLayout(PantallaVerRutas);
        PantallaVerRutas.setLayout(PantallaVerRutasLayout);
        PantallaVerRutasLayout.setHorizontalGroup(
            PantallaVerRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaVerRutasLayout.createSequentialGroup()
                .addGroup(PantallaVerRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PantallaVerRutasLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(FiltroOrdenaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PantallaVerRutasLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(btnVolverVerRutas))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PantallaVerRutasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PantallaVerRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnListarPuntos, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnPuntoInteres, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnPuntoPeligro, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnInsertaActividad, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnPeriodo, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(35, 35, 35)
                .addGroup(PantallaVerRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PantallaVerRutasLayout.createSequentialGroup()
                        .addComponent(btnModificaRuta)
                        .addGap(18, 18, 18)
                        .addComponent(btnBorrarRuta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnValoracion)
                        .addGap(30, 30, 30)
                        .addComponent(btnResena))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        PantallaVerRutasLayout.setVerticalGroup(
            PantallaVerRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaVerRutasLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(PantallaVerRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PantallaVerRutasLayout.createSequentialGroup()
                        .addComponent(FiltroOrdenaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnListarPuntos)
                        .addGap(18, 18, 18)
                        .addComponent(btnPuntoInteres)
                        .addGap(38, 38, 38)
                        .addComponent(btnPuntoPeligro)
                        .addGap(18, 18, 18)
                        .addComponent(btnInsertaActividad)
                        .addGap(38, 38, 38)
                        .addComponent(btnPeriodo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PantallaVerRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVolverVerRutas)
                    .addComponent(btnBorrarRuta)
                    .addComponent(btnModificaRuta)
                    .addGroup(PantallaVerRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnResena)
                        .addComponent(btnValoracion)))
                .addContainerGap(131, Short.MAX_VALUE))
        );

        getContentPane().add(PantallaVerRutas, "card3");

        PantallaRegistro.setToolTipText("PantallaRegistro");
        PantallaRegistro.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PantallaRegistro.setPreferredSize(new java.awt.Dimension(800, 600));

        btnEnviarInicioSesion.setText("Enviar");
        btnEnviarInicioSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarInicioSesionActionPerformed(evt);
            }
        });

        textPassword.setText("jPasswordField1");
        textPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textPasswordFocusGained(evt);
            }
        });
        textPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPasswordActionPerformed(evt);
            }
        });

        jLabel1.setText("Usuario");

        jLabel2.setText("Password");

        javax.swing.GroupLayout PantallaRegistroLayout = new javax.swing.GroupLayout(PantallaRegistro);
        PantallaRegistro.setLayout(PantallaRegistroLayout);
        PantallaRegistroLayout.setHorizontalGroup(
            PantallaRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaRegistroLayout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addGroup(PantallaRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEnviarInicioSesion)
                    .addGroup(PantallaRegistroLayout.createSequentialGroup()
                        .addGroup(PantallaRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75)
                        .addGroup(PantallaRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                            .addComponent(textPassword))))
                .addContainerGap(404, Short.MAX_VALUE))
        );
        PantallaRegistroLayout.setVerticalGroup(
            PantallaRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaRegistroLayout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addGroup(PantallaRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(PantallaRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(btnEnviarInicioSesion)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        getContentPane().add(PantallaRegistro, "card4");
        PantallaRegistro.getAccessibleContext().setAccessibleName("Pantalla_registro");

        PantallaMenu.setPreferredSize(new java.awt.Dimension(800, 600));

        btnVerRuta2.setText("Ver Rutas");
        btnVerRuta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerRuta2ActionPerformed(evt);
            }
        });

        btnCrearRuta.setText("Crear Rutas");
        btnCrearRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearRutaActionPerformed(evt);
            }
        });

        btnDescargarFicha.setText("Descargar Ficha");
        btnDescargarFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargarFichaActionPerformed(evt);
            }
        });

        btnCrearCalendar.setText("Crear calendario");
        btnCrearCalendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearCalendarActionPerformed(evt);
            }
        });

        btnValidarRuta.setText("Validar ruta");
        btnValidarRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidarRutaActionPerformed(evt);
            }
        });

        btnValidarUsuario.setText("Validar usuario");
        btnValidarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidarUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PantallaMenuLayout = new javax.swing.GroupLayout(PantallaMenu);
        PantallaMenu.setLayout(PantallaMenuLayout);
        PantallaMenuLayout.setHorizontalGroup(
            PantallaMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaMenuLayout.createSequentialGroup()
                .addGap(332, 332, 332)
                .addGroup(PantallaMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnValidarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnValidarRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCrearCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVerRuta2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDescargarFicha, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCrearRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(490, Short.MAX_VALUE))
        );
        PantallaMenuLayout.setVerticalGroup(
            PantallaMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaMenuLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(btnVerRuta2)
                .addGap(41, 41, 41)
                .addComponent(btnCrearRuta)
                .addGap(39, 39, 39)
                .addComponent(btnDescargarFicha)
                .addGap(36, 36, 36)
                .addComponent(btnCrearCalendar)
                .addGap(48, 48, 48)
                .addComponent(btnValidarRuta)
                .addGap(47, 47, 47)
                .addComponent(btnValidarUsuario)
                .addContainerGap(106, Short.MAX_VALUE))
        );

        getContentPane().add(PantallaMenu, "card5");

        PantallaValidarRutas.setBorder(javax.swing.BorderFactory.createTitledBorder("Rutas no validadas"));
        PantallaValidarRutas.setPreferredSize(new java.awt.Dimension(800, 600));

        jScrollPane2.setViewportView(TablaRutasNoValidadas);

        btnValidaRUTA.setText("Validar");
        btnValidaRUTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidaRUTAActionPerformed(evt);
            }
        });

        btnVolverValidaRutas.setText("Volver");
        btnVolverValidaRutas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverValidaRutasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PantallaValidarRutasLayout = new javax.swing.GroupLayout(PantallaValidarRutas);
        PantallaValidarRutas.setLayout(PantallaValidarRutasLayout);
        PantallaValidarRutasLayout.setHorizontalGroup(
            PantallaValidarRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaValidarRutasLayout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addGroup(PantallaValidarRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(PantallaValidarRutasLayout.createSequentialGroup()
                        .addComponent(btnVolverValidaRutas)
                        .addGap(604, 604, 604)
                        .addComponent(btnValidaRUTA)))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        PantallaValidarRutasLayout.setVerticalGroup(
            PantallaValidarRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaValidarRutasLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PantallaValidarRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnValidaRUTA)
                    .addComponent(btnVolverValidaRutas))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        getContentPane().add(PantallaValidarRutas, "card6");

        PantallaValidarUsuarios.setPreferredSize(new java.awt.Dimension(800, 600));

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Usuarios no validados"));
        jScrollPane3.setViewportView(TablaUsuarios);

        btnValidarUsuarios.setText("Validar");
        btnValidarUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidarUsuariosActionPerformed(evt);
            }
        });

        btnVolverValidaUsuario.setText("Volver");
        btnVolverValidaUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverValidaUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PantallaValidarUsuariosLayout = new javax.swing.GroupLayout(PantallaValidarUsuarios);
        PantallaValidarUsuarios.setLayout(PantallaValidarUsuariosLayout);
        PantallaValidarUsuariosLayout.setHorizontalGroup(
            PantallaValidarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaValidarUsuariosLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(PantallaValidarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PantallaValidarUsuariosLayout.createSequentialGroup()
                        .addComponent(btnVolverValidaUsuario)
                        .addGap(752, 752, 752)
                        .addComponent(btnValidarUsuarios))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        PantallaValidarUsuariosLayout.setVerticalGroup(
            PantallaValidarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaValidarUsuariosLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PantallaValidarUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnValidarUsuarios)
                    .addComponent(btnVolverValidaUsuario))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(PantallaValidarUsuarios, "card7");

        PantallaCrearRuta.setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel3.setText("Nombre ruta:");

        jLabel4.setText("Longitud inicial:");

        jLabel5.setText("Latitud inicial:");

        jLabel6.setText("Longitud final:");

        jLabel7.setText("Latitud final:");

        jLabel8.setText("Duracion en minutos:");

        jLabel9.setText("Latitud máxima:");

        jLabel10.setText("Longitud máxima:");

        jLabel11.setText("Distancia total:");

        jLabel12.setText("Desnivel acumulado:");

        jLabel13.setText("Clasificacion:");

        jLabel14.setText("Tipo de terreno:");

        jLabel15.setText("Indicaciones:");

        jLabel16.setText("Ruta accesible/inclusiva:");

        jLabel17.setText("Familiar:");

        jLabel18.setText("Recomendaciones:");

        jLabel19.setText("URL del gpx:");

        jLabel20.setText("Zona geográfica:");

        txtRecomendacion.setColumns(20);
        txtRecomendacion.setRows(5);
        jScrollPane4.setViewportView(txtRecomendacion);

        txtLatIni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLatIniActionPerformed(evt);
            }
        });

        txtLatFin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLatFinActionPerformed(evt);
            }
        });

        txtLatMaxima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLatMaximaActionPerformed(evt);
            }
        });

        txtDuracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDuracionActionPerformed(evt);
            }
        });

        ClasificacionCombo.setMaximumRowCount(2);
        ClasificacionCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lineal", "Circular" }));
        ClasificacionCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClasificacionComboActionPerformed(evt);
            }
        });

        txtDesnivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDesnivelActionPerformed(evt);
            }
        });

        TerrenoCombo.setMaximumRowCount(5);
        TerrenoCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        AccesibleCombo.setMaximumRowCount(2);
        AccesibleCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No" }));

        IndicacionesCombo.setMaximumRowCount(5);
        IndicacionesCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        FamiliarCombo.setMaximumRowCount(2);
        FamiliarCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No" }));

        btnSubmitRuta.setText("Crear Ruta");
        btnSubmitRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitRutaActionPerformed(evt);
            }
        });

        btnVolverCrearRuta.setText("Volver");
        btnVolverCrearRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverCrearRutaActionPerformed(evt);
            }
        });

        btnSubmitModificacion.setText("Modificar");
        btnSubmitModificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitModificacionActionPerformed(evt);
            }
        });

        jLabel49.setText("Periodo recomendado:");

        PeriodosCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PeriodosComboActionPerformed(evt);
            }
        });

        jButton2.setLabel("btnImportar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PantallaCrearRutaLayout = new javax.swing.GroupLayout(PantallaCrearRuta);
        PantallaCrearRuta.setLayout(PantallaCrearRutaLayout);
        PantallaCrearRutaLayout.setHorizontalGroup(
            PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PantallaCrearRutaLayout.createSequentialGroup()
                .addContainerGap(169, Short.MAX_VALUE)
                .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(jLabel6)
                    .addComponent(jLabel13)
                    .addComponent(jLabel10)
                    .addComponent(jLabel49)
                    .addComponent(jLabel12))
                .addGap(31, 31, 31)
                .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLongIni, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLatIni, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLongFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLatFin, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLatMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(ClasificacionCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtLongMaxima, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                        .addComponent(txtDesnivel, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                    .addComponent(PeriodosCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jButton2)
                    .addGroup(PantallaCrearRutaLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel17))))
                .addGap(39, 39, 39)
                .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AccesibleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TerrenoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IndicacionesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FamiliarCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtURL, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtZonaGeo, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(PantallaCrearRutaLayout.createSequentialGroup()
                            .addComponent(btnVolverCrearRuta)
                            .addGap(57, 57, 57)
                            .addComponent(btnSubmitRuta))
                        .addComponent(btnSubmitModificacion, javax.swing.GroupLayout.Alignment.LEADING)))
                .addGap(119, 119, 119))
        );
        PantallaCrearRutaLayout.setVerticalGroup(
            PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaCrearRutaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNomRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(TerrenoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtLongIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(IndicacionesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtLatIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(AccesibleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtLongFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(FamiliarCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtLatFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(txtURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(txtZonaGeo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PantallaCrearRutaLayout.createSequentialGroup()
                        .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(18, 18, 18)
                        .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtLatMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtLongMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(ClasificacionCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(PantallaCrearRutaLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtDesnivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PeriodosCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PantallaCrearRutaLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(btnSubmitModificacion)
                        .addGap(18, 18, 18)
                        .addGroup(PantallaCrearRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnVolverCrearRuta)
                            .addComponent(btnSubmitRuta)
                            .addComponent(jButton2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        getContentPane().add(PantallaCrearRuta, "card8");

        PantallaValoracion.setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel21.setText("Nivel de Dificultad:");

        jLabel22.setText("Belleza:");

        jLabel24.setText("Valoracion:");

        jLabel26.setText("Valoracion Tecnica:");

        jLabel27.setText("Interés cultural:");

        txtValoracion.setColumns(20);
        txtValoracion.setRows(5);
        jScrollPane5.setViewportView(txtValoracion);

        txtValoracionTecnica.setColumns(20);
        txtValoracionTecnica.setRows(5);
        jScrollPane6.setViewportView(txtValoracionTecnica);

        valoDificutadCombo.setMaximumRowCount(5);
        valoDificutadCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        valoInteresCombo.setMaximumRowCount(5);
        valoInteresCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        valoBellezaCombo.setMaximumRowCount(5);
        valoBellezaCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        btnSubmitValo.setText("Enviar");
        btnSubmitValo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitValoActionPerformed(evt);
            }
        });

        btnVolverValoracion.setText("Volver");
        btnVolverValoracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverValoracionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PantallaValoracionLayout = new javax.swing.GroupLayout(PantallaValoracion);
        PantallaValoracion.setLayout(PantallaValoracionLayout);
        PantallaValoracionLayout.setHorizontalGroup(
            PantallaValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PantallaValoracionLayout.createSequentialGroup()
                .addGroup(PantallaValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PantallaValoracionLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(PantallaValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addGroup(PantallaValoracionLayout.createSequentialGroup()
                                .addGroup(PantallaValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel27))
                                .addGap(18, 18, 18)
                                .addGroup(PantallaValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(valoInteresCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(valoDificutadCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(valoBellezaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addGroup(PantallaValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel26))
                        .addGap(53, 53, 53)
                        .addGroup(PantallaValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PantallaValoracionLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnVolverValoracion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSubmitValo)))
                .addGap(72, 72, 72))
        );
        PantallaValoracionLayout.setVerticalGroup(
            PantallaValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaValoracionLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(PantallaValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PantallaValoracionLayout.createSequentialGroup()
                        .addGroup(PantallaValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(jLabel24)
                            .addComponent(valoDificutadCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(107, 107, 107)
                        .addGroup(PantallaValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(jLabel26)
                            .addComponent(valoBellezaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PantallaValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(valoInteresCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23)
                        .addGap(149, 149, 149))
                    .addGroup(PantallaValoracionLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 208, Short.MAX_VALUE)
                        .addGroup(PantallaValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSubmitValo)
                            .addComponent(btnVolverValoracion))
                        .addGap(67, 67, 67))))
        );

        getContentPane().add(PantallaValoracion, "card9");

        PantallaResena.setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel25.setText("Reseña:");

        txtResena.setColumns(20);
        txtResena.setRows(5);
        jScrollPane7.setViewportView(txtResena);

        btnSubmitResena.setText("Enviar Reseña");
        btnSubmitResena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitResenaActionPerformed(evt);
            }
        });

        btnVolverResena.setText("Volver");
        btnVolverResena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverResenaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PantallaResenaLayout = new javax.swing.GroupLayout(PantallaResena);
        PantallaResena.setLayout(PantallaResenaLayout);
        PantallaResenaLayout.setHorizontalGroup(
            PantallaResenaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PantallaResenaLayout.createSequentialGroup()
                .addContainerGap(111, Short.MAX_VALUE)
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(PantallaResenaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(PantallaResenaLayout.createSequentialGroup()
                        .addComponent(btnVolverResena)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSubmitResena))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(186, 186, 186))
        );
        PantallaResenaLayout.setVerticalGroup(
            PantallaResenaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaResenaLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(PantallaResenaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(PantallaResenaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmitResena)
                    .addComponent(btnVolverResena))
                .addContainerGap(216, Short.MAX_VALUE))
        );

        getContentPane().add(PantallaResena, "card10");

        jLabel28.setText("Nombre del punto:");

        jLabel29.setText("Número de punto en la ruta:");

        jLabel30.setText("Tipo:");

        jLabel31.setText("Fecha (Formato AAAA/mm/dd):");

        jLabel32.setText("Hora:");

        jLabel33.setText("Longitud:");

        jLabel34.setText("Latitud:");

        jLabel35.setText("Descripción:");

        txtDescripcionPuntoInteres.setColumns(20);
        txtDescripcionPuntoInteres.setRows(5);
        jScrollPane8.setViewportView(txtDescripcionPuntoInteres);

        jLabel36.setText("Características especiales:");

        txtCaracteristicasPuntoInteres.setColumns(20);
        txtCaracteristicasPuntoInteres.setRows(5);
        jScrollPane9.setViewportView(txtCaracteristicasPuntoInteres);

        TipoPuntoInteresCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Historico/Arqueologico", "Naturaleza", "Mirador", "Area de descanso", "Punto de agua", "Refugio/Alojamiento", "Cultural", "Geologico", "Fauna especifica", "Botanico" }));

        txtNomPuntoInteres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomPuntoInteresActionPerformed(evt);
            }
        });

        txtNumPuntoInteres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumPuntoInteresActionPerformed(evt);
            }
        });

        btnSubmitPuntoInteres.setText("Enviar");
        btnSubmitPuntoInteres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitPuntoInteresActionPerformed(evt);
            }
        });

        btnVolverPuntoInteres.setText("Volver");
        btnVolverPuntoInteres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverPuntoInteresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PantallaPuntoInteresLayout = new javax.swing.GroupLayout(PantallaPuntoInteres);
        PantallaPuntoInteres.setLayout(PantallaPuntoInteresLayout);
        PantallaPuntoInteresLayout.setHorizontalGroup(
            PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaPuntoInteresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel30)
                    .addComponent(jLabel34)
                    .addComponent(jLabel33)
                    .addComponent(jLabel32)
                    .addComponent(jLabel31)
                    .addComponent(jLabel29)
                    .addComponent(jLabel28))
                .addGap(18, 18, 18)
                .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLatitudPuntoInteres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TipoPuntoInteresCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtHoraPuntoInteres, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtFechaPuntoInteres, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtNumPuntoInteres, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PantallaPuntoInteresLayout.createSequentialGroup()
                        .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLongitudPuntoInteres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNomPuntoInteres, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36))
                .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PantallaPuntoInteresLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(PantallaPuntoInteresLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PantallaPuntoInteresLayout.createSequentialGroup()
                                .addComponent(btnVolverPuntoInteres)
                                .addGap(99, 99, 99)
                                .addComponent(btnSubmitPuntoInteres))
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25))
        );
        PantallaPuntoInteresLayout.setVerticalGroup(
            PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaPuntoInteresLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PantallaPuntoInteresLayout.createSequentialGroup()
                        .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(txtNomPuntoInteres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(txtNumPuntoInteres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(txtFechaPuntoInteres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(txtHoraPuntoInteres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(txtLongitudPuntoInteres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(txtLatitudPuntoInteres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30)
                            .addComponent(TipoPuntoInteresCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PantallaPuntoInteresLayout.createSequentialGroup()
                        .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(76, 76, 76)
                        .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PantallaPuntoInteresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSubmitPuntoInteres)
                            .addComponent(btnVolverPuntoInteres))))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        getContentPane().add(PantallaPuntoInteres, "card12");

        jLabel37.setText("Nombre del punto:");

        jLabel38.setText("Número de punto en la ruta:");

        jLabel39.setText("Km con respecto a la ruta:");

        jLabel40.setText("Fecha (Formato AAAA-mm-dd):");

        jLabel41.setText("Hora:");

        jLabel42.setText("Longitud:");

        jLabel43.setText("Latitud:");

        jLabel44.setText("Descripción:");

        txtDescripcionPuntoPeligro.setColumns(20);
        txtDescripcionPuntoPeligro.setRows(5);
        jScrollPane10.setViewportView(txtDescripcionPuntoPeligro);

        jLabel45.setText("Descripcion de la gravedad:");

        txtDescripcionGravedadPuntoPeligro.setColumns(20);
        txtDescripcionGravedadPuntoPeligro.setRows(5);
        jScrollPane11.setViewportView(txtDescripcionGravedadPuntoPeligro);

        txtNomPuntoPeligro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomPuntoPeligroActionPerformed(evt);
            }
        });

        txtNumPuntoPeligro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumPuntoPeligroActionPerformed(evt);
            }
        });

        btnSubmitPuntoPeligro.setText("Enviar");
        btnSubmitPuntoPeligro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitPuntoPeligroActionPerformed(evt);
            }
        });

        btnVolverPuntoPeligro.setText("Volver");
        btnVolverPuntoPeligro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverPuntoPeligroActionPerformed(evt);
            }
        });

        jLabel46.setText("Nivel de gravedad:");

        nivelGravedadCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        javax.swing.GroupLayout PantallaPuntoPeligroLayout = new javax.swing.GroupLayout(PantallaPuntoPeligro);
        PantallaPuntoPeligro.setLayout(PantallaPuntoPeligroLayout);
        PantallaPuntoPeligroLayout.setHorizontalGroup(
            PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaPuntoPeligroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel39)
                    .addComponent(jLabel43)
                    .addComponent(jLabel42)
                    .addComponent(jLabel41)
                    .addComponent(jLabel40)
                    .addComponent(jLabel38)
                    .addComponent(jLabel37))
                .addGap(31, 31, 31)
                .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNomPuntoPeligro, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(txtHoraPuntoPeligro)
                    .addComponent(txtFechaPuntoPeligro)
                    .addComponent(txtNumPuntoPeligro, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(txtLongitudPuntoPeligro)
                    .addComponent(txtLatitudPuntoPeligro)
                    .addComponent(txtkmPuntoPeligro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel45, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PantallaPuntoPeligroLayout.createSequentialGroup()
                        .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel46)
                            .addComponent(jLabel44))
                        .addGap(8, 8, 8)))
                .addGap(18, 18, 18)
                .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(PantallaPuntoPeligroLayout.createSequentialGroup()
                            .addComponent(btnVolverPuntoPeligro)
                            .addGap(86, 86, 86)
                            .addComponent(btnSubmitPuntoPeligro))
                        .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addComponent(nivelGravedadCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        PantallaPuntoPeligroLayout.setVerticalGroup(
            PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaPuntoPeligroLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PantallaPuntoPeligroLayout.createSequentialGroup()
                        .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel37)
                            .addComponent(txtNomPuntoPeligro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel44))
                        .addGap(29, 29, 29)
                        .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel38)
                            .addComponent(txtNumPuntoPeligro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(txtFechaPuntoPeligro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(txtHoraPuntoPeligro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46)
                    .addComponent(nivelGravedadCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PantallaPuntoPeligroLayout.createSequentialGroup()
                        .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42)
                            .addComponent(txtLongitudPuntoPeligro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45))
                        .addGap(29, 29, 29)
                        .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel43)
                            .addComponent(txtLatitudPuntoPeligro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel39)
                            .addComponent(txtkmPuntoPeligro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PantallaPuntoPeligroLayout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(PantallaPuntoPeligroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnVolverPuntoPeligro)
                            .addComponent(btnSubmitPuntoPeligro))))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        getContentPane().add(PantallaPuntoPeligro, "card12");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarSesionActionPerformed
        PantallaCrearRuta.setVisible(false);
        PantallaMenu.setVisible(false);
        PantallaPrinci.setVisible(false);
        PantallaRegistro.setVisible(true);
        PantallaValidarRutas.setVisible(false);
        PantallaValidarUsuarios.setVisible(false);
        PantallaVerRutas.setVisible(false);
        PantallaValoracion.setVisible(false);
        PantallaResena.setVisible(false);
        PantallaPuntoInteres.setVisible(false);
        PantallaPuntoPeligro.setVisible(false);
    }//GEN-LAST:event_btnIniciarSesionActionPerformed

    private void btnEnviarInicioSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarInicioSesionActionPerformed
        String email = textUsuario.getText();
        char[] pass = textPassword.getPassword();
        String password = "";
        for (char c : pass) {
            password += c;
        }
        user = usuarios.buscarUsuPorEmailPassword(email, password);
        if (user == null) {
            JOptionPane.showMessageDialog(null, "Usuario o contraseña no validos", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            if (user instanceof Administrador) {
                PantallaCrearRuta.setVisible(false);
                PantallaMenu.setVisible(true);
                PantallaPrinci.setVisible(false);
                PantallaRegistro.setVisible(false);
                PantallaValidarRutas.setVisible(false);
                PantallaValidarUsuarios.setVisible(false);
                PantallaVerRutas.setVisible(false);
                PantallaValoracion.setVisible(false);
                PantallaResena.setVisible(false);
                PantallaPuntoInteres.setVisible(false);
                PantallaPuntoPeligro.setVisible(false);
            } else if (user instanceof Profesor) {
                PantallaCrearRuta.setVisible(false);
                PantallaMenu.setVisible(true);
                PantallaPrinci.setVisible(false);
                PantallaRegistro.setVisible(false);
                PantallaValidarRutas.setVisible(false);
                PantallaValidarUsuarios.setVisible(false);
                PantallaVerRutas.setVisible(false);
                PantallaValoracion.setVisible(false);
                PantallaResena.setVisible(false);
                PantallaPuntoInteres.setVisible(false);
                PantallaPuntoPeligro.setVisible(false);
                btnValidarUsuario.setVisible(false);
                btnValidarRuta.setVisible(false);
                btnBorrarRuta.setVisible(false);
            } else if (user instanceof Disenador_rutas) {
                PantallaCrearRuta.setVisible(false);
                PantallaMenu.setVisible(true);
                PantallaPrinci.setVisible(false);
                PantallaRegistro.setVisible(false);
                PantallaValidarRutas.setVisible(false);
                PantallaValidarUsuarios.setVisible(false);
                PantallaVerRutas.setVisible(false);
                PantallaValoracion.setVisible(false);
                PantallaResena.setVisible(false);
                PantallaPuntoInteres.setVisible(false);
                PantallaPuntoPeligro.setVisible(false);
                btnValidarUsuario.setVisible(false);
                btnValidarRuta.setVisible(false);
                btnBorrarRuta.setVisible(false);
                btnCrearCalendar.setVisible(false);
            } else if (user instanceof Alumno) {
                PantallaCrearRuta.setVisible(false);
                PantallaMenu.setVisible(true);
                PantallaPrinci.setVisible(false);
                PantallaRegistro.setVisible(false);
                PantallaValidarRutas.setVisible(false);
                PantallaValidarUsuarios.setVisible(false);
                PantallaVerRutas.setVisible(false);
                PantallaValoracion.setVisible(false);
                PantallaResena.setVisible(false);
                PantallaPuntoInteres.setVisible(false);
                PantallaPuntoPeligro.setVisible(false);
                btnValidarUsuario.setVisible(false);
                btnValidarRuta.setVisible(false);
                btnBorrarRuta.setVisible(false);
                btnCrearCalendar.setVisible(false);
                btnDescargarFicha.setVisible(false);
            }
        }
    }//GEN-LAST:event_btnEnviarInicioSesionActionPerformed

    private void btnVerRutasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerRutasActionPerformed
        cargarTablaRutas();
        PantallaCrearRuta.setVisible(false);
        PantallaMenu.setVisible(false);
        PantallaPrinci.setVisible(false);
        PantallaRegistro.setVisible(false);
        PantallaValidarRutas.setVisible(false);
        PantallaValidarUsuarios.setVisible(false);
        PantallaVerRutas.setVisible(true);
        PantallaValoracion.setVisible(false);
        PantallaResena.setVisible(false);
        PantallaPuntoInteres.setVisible(false);
        PantallaPuntoPeligro.setVisible(false);
        btnValoracion.setVisible(false);
        btnVolverVerRutas.setVisible(true);
        btnBorrarRuta.setVisible(false);
        btnModificaRuta.setVisible(false);
        btnResena.setVisible(false);
        btnPeriodo.setVisible(false);
        btnInsertaActividad.setVisible(false);
        btnPuntoPeligro.setVisible(false);
        btnPuntoInteres.setVisible(false);
    }//GEN-LAST:event_btnVerRutasActionPerformed

    private void btnVerRuta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerRuta2ActionPerformed
        cargarTablaRutas();
        if (user instanceof Administrador) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(true);
            btnBorrarRuta.setVisible(true);
            btnModificaRuta.setVisible(true);
            btnPeriodo.setVisible(true);
            btnInsertaActividad.setVisible(true);
            btnResena.setVisible(true);
            btnValoracion.setVisible(true);
            btnPuntoPeligro.setVisible(true);
            btnPuntoInteres.setVisible(true);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
        } else {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(true);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnResena.setVisible(true);
            btnValoracion.setVisible(true);
            btnBorrarRuta.setVisible(false);
            btnModificaRuta.setVisible(false);
            btnPeriodo.setVisible(false);
            btnInsertaActividad.setVisible(false);
            btnPuntoPeligro.setVisible(false);
            btnPuntoInteres.setVisible(false);
        }
    }//GEN-LAST:event_btnVerRuta2ActionPerformed

    private void btnCrearRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearRutaActionPerformed
        cargaComboPeriodos();
        PantallaCrearRuta.setVisible(true);
        btnSubmitModificacion.setVisible(false);
        PantallaMenu.setVisible(false);
        PantallaPrinci.setVisible(false);
        PantallaRegistro.setVisible(false);
        PantallaValidarRutas.setVisible(false);
        PantallaValidarUsuarios.setVisible(false);
        PantallaVerRutas.setVisible(false);
        PantallaValoracion.setVisible(false);
        PantallaResena.setVisible(false);
        PantallaPuntoInteres.setVisible(false);
        PantallaPuntoPeligro.setVisible(false);
    }//GEN-LAST:event_btnCrearRutaActionPerformed

    private void btnDescargarFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargarFichaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDescargarFichaActionPerformed

    private void btnCrearCalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearCalendarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCrearCalendarActionPerformed

    private void btnValidarRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidarRutaActionPerformed
        cargarTablaRutasNoValidadas();
        PantallaCrearRuta.setVisible(false);
        PantallaMenu.setVisible(false);
        PantallaPrinci.setVisible(false);
        PantallaRegistro.setVisible(false);
        PantallaValidarRutas.setVisible(true);
        PantallaValidarUsuarios.setVisible(false);
        PantallaVerRutas.setVisible(false);
        PantallaValoracion.setVisible(false);
        PantallaResena.setVisible(false);
        PantallaPuntoInteres.setVisible(false);
        PantallaPuntoPeligro.setVisible(false);
    }//GEN-LAST:event_btnValidarRutaActionPerformed

    private void btnValidarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidarUsuarioActionPerformed
        cargarTablaUsuariosNoValidados();
        PantallaCrearRuta.setVisible(false);
        PantallaMenu.setVisible(false);
        PantallaPrinci.setVisible(false);
        PantallaRegistro.setVisible(false);
        PantallaValidarRutas.setVisible(false);
        PantallaValidarUsuarios.setVisible(true);
        PantallaVerRutas.setVisible(false);
        PantallaValoracion.setVisible(false);
        PantallaResena.setVisible(false);
        PantallaPuntoInteres.setVisible(false);
        PantallaPuntoPeligro.setVisible(false);
    }//GEN-LAST:event_btnValidarUsuarioActionPerformed

    private void btnValidaRUTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidaRUTAActionPerformed
        int seleccion = TablaRutasNoValidadas.getSelectedRow();
        if (seleccion != -1) {
            String id_string = (String) TablaRutasNoValidadas.getValueAt(seleccion, 0);
            int id = Integer.parseInt(id_string);
            Ruta ruta = rutas.obtenerRutaPorId(id);
            if (!rutas.validarRuta(ruta)) {
                JOptionPane.showMessageDialog(null, "No se pudo validar la ruta", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                cargarTablaRutasNoValidadas();
                JOptionPane.showMessageDialog(null, "Ruta Validada", "", JOptionPane.PLAIN_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debes seleccionar una ruta", "", JOptionPane.NO_OPTION);
        }

    }//GEN-LAST:event_btnValidaRUTAActionPerformed

    private void btnValidarUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidarUsuariosActionPerformed
        int seleccion = TablaUsuarios.getSelectedRow();
        if (seleccion != -1) {
            String id_string = (String) TablaUsuarios.getValueAt(seleccion, 0);
            int id = Integer.parseInt(id_string);
            Usuario usu = usuarios.obtenerUsuarioPorId(id);
            if (!usuarios.validarUsuario(usu)) {
                JOptionPane.showMessageDialog(null, "No se pudo validar al usuario", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                cargarTablaUsuariosNoValidados();
                JOptionPane.showMessageDialog(null, "Usuario Validado", "", JOptionPane.PLAIN_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debes seleccionar un usuario", "", JOptionPane.NO_OPTION);
        }
    }//GEN-LAST:event_btnValidarUsuariosActionPerformed

    private void btnVolverVerRutasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverVerRutasActionPerformed
        if (user == null) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(true);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
        } else {
            if (user instanceof Administrador) {
                PantallaCrearRuta.setVisible(false);
                PantallaMenu.setVisible(true);
                PantallaPrinci.setVisible(false);
                PantallaRegistro.setVisible(false);
                PantallaValidarRutas.setVisible(false);
                PantallaValidarUsuarios.setVisible(false);
                PantallaVerRutas.setVisible(false);
                PantallaValoracion.setVisible(false);
                PantallaResena.setVisible(false);
                PantallaPuntoInteres.setVisible(false);
                PantallaPuntoPeligro.setVisible(false);
            } else if (user instanceof Profesor) {
                PantallaCrearRuta.setVisible(false);
                PantallaMenu.setVisible(true);
                PantallaPrinci.setVisible(false);
                PantallaRegistro.setVisible(false);
                PantallaValidarRutas.setVisible(false);
                PantallaValidarUsuarios.setVisible(false);
                PantallaVerRutas.setVisible(false);
                PantallaValoracion.setVisible(false);
                PantallaResena.setVisible(false);
                PantallaPuntoInteres.setVisible(false);
                PantallaPuntoPeligro.setVisible(false);
                btnValidarUsuario.setVisible(false);
                btnValidarRuta.setVisible(false);
                btnBorrarRuta.setVisible(false);

            } else if (user instanceof Disenador_rutas) {
                PantallaCrearRuta.setVisible(false);
                PantallaMenu.setVisible(true);
                PantallaPrinci.setVisible(false);
                PantallaRegistro.setVisible(false);
                PantallaValidarRutas.setVisible(false);
                PantallaValidarUsuarios.setVisible(false);
                PantallaVerRutas.setVisible(false);
                PantallaValoracion.setVisible(false);
                PantallaResena.setVisible(false);
                PantallaPuntoInteres.setVisible(false);
                PantallaPuntoPeligro.setVisible(false);
                btnValidarUsuario.setVisible(false);
                btnValidarRuta.setVisible(false);
                btnBorrarRuta.setVisible(false);
                btnCrearCalendar.setVisible(false);

            } else if (user instanceof Alumno) {
                PantallaCrearRuta.setVisible(false);
                PantallaMenu.setVisible(true);
                PantallaPrinci.setVisible(false);
                PantallaRegistro.setVisible(false);
                PantallaValidarRutas.setVisible(false);
                PantallaValidarUsuarios.setVisible(false);
                PantallaVerRutas.setVisible(false);
                PantallaValoracion.setVisible(false);
                PantallaResena.setVisible(false);
                PantallaPuntoInteres.setVisible(false);
                PantallaPuntoPeligro.setVisible(false);
                btnValidarUsuario.setVisible(false);
                btnValidarRuta.setVisible(false);
                btnBorrarRuta.setVisible(false);
                btnCrearCalendar.setVisible(false);
                btnDescargarFicha.setVisible(false);
            }
        }
    }//GEN-LAST:event_btnVolverVerRutasActionPerformed

    private void btnVolverValidaRutasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverValidaRutasActionPerformed
        if (user instanceof Administrador) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(true);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
        } else if (user instanceof Profesor) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(true);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnValidarUsuario.setVisible(false);
            btnValidarRuta.setVisible(false);
            btnBorrarRuta.setVisible(false);

        } else if (user instanceof Disenador_rutas) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(true);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnValidarUsuario.setVisible(false);
            btnValidarRuta.setVisible(false);
            btnBorrarRuta.setVisible(false);
            btnCrearCalendar.setVisible(false);

        } else if (user instanceof Alumno) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(true);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnValidarUsuario.setVisible(false);
            btnValidarRuta.setVisible(false);
            btnBorrarRuta.setVisible(false);
            btnCrearCalendar.setVisible(false);
            btnDescargarFicha.setVisible(false);
        }
    }//GEN-LAST:event_btnVolverValidaRutasActionPerformed

    private void btnVolverValidaUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverValidaUsuarioActionPerformed
        if (user instanceof Administrador) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(true);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
        } else if (user instanceof Profesor) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(true);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnValidarUsuario.setVisible(false);
            btnValidarRuta.setVisible(false);
            btnBorrarRuta.setVisible(false);

        } else if (user instanceof Disenador_rutas) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(true);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnValidarUsuario.setVisible(false);
            btnValidarRuta.setVisible(false);
            btnBorrarRuta.setVisible(false);
            btnCrearCalendar.setVisible(false);

        } else if (user instanceof Alumno) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(true);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnValidarUsuario.setVisible(false);
            btnValidarRuta.setVisible(false);
            btnBorrarRuta.setVisible(false);
            btnCrearCalendar.setVisible(false);
            btnDescargarFicha.setVisible(false);
        }
    }//GEN-LAST:event_btnVolverValidaUsuarioActionPerformed

    private void txtLatIniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLatIniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLatIniActionPerformed

    private void txtLatFinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLatFinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLatFinActionPerformed

    private void txtDuracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDuracionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDuracionActionPerformed

    private void txtLatMaximaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLatMaximaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLatMaximaActionPerformed

    private void txtDesnivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDesnivelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDesnivelActionPerformed

    private void btnVolverCrearRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverCrearRutaActionPerformed
        if (user instanceof Administrador) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(true);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
        } else if (user instanceof Profesor) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(true);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnValidarUsuario.setVisible(false);
            btnValidarRuta.setVisible(false);
            btnBorrarRuta.setVisible(false);

        } else if (user instanceof Disenador_rutas) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(true);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnValidarUsuario.setVisible(false);
            btnValidarRuta.setVisible(false);
            btnBorrarRuta.setVisible(false);
            btnCrearCalendar.setVisible(false);
        } else if (user instanceof Alumno) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(true);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnValidarUsuario.setVisible(false);
            btnValidarRuta.setVisible(false);
            btnBorrarRuta.setVisible(false);
            btnCrearCalendar.setVisible(false);
            btnDescargarFicha.setVisible(false);

        }
    }//GEN-LAST:event_btnVolverCrearRutaActionPerformed

    private void btnSubmitRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitRutaActionPerformed
        String nombre = txtNomRuta.getText();
        try {
            Double longitudIni = Double.parseDouble(txtLongIni.getText());
            Double latitudIni = Double.parseDouble(txtLatIni.getText());
            Double longitudFin = Double.parseDouble(txtLongFinal.getText());
            Double latitudFin = Double.parseDouble(txtLatFin.getText());
            int distancia = Integer.parseInt(txtDistancia.getText());
            int duracion = Integer.parseInt(txtDuracion.getText());
            Double latitudMax = Double.parseDouble(txtLatMaxima.getText());
            Double longitudMax = Double.parseDouble(txtLongMaxima.getText());
            CLASIFICACION clasificacion;
            String clasificacionStr = (String) ClasificacionCombo.getSelectedItem();
            if (clasificacionStr.equals("Circular")) {
                clasificacion = CLASIFICACION.circular;
            } else {
                clasificacion = CLASIFICACION.lineal;
            }
            int desnivel = Integer.parseInt(txtDesnivel.getText());
            int terreno = Integer.parseInt((String) TerrenoCombo.getSelectedItem());
            int indicaciones = Integer.parseInt((String) IndicacionesCombo.getSelectedItem());
            boolean accesible_inclusivo;
            String accesible = (String) AccesibleCombo.getSelectedItem();
            if (accesible.equals("Si")) {
                accesible_inclusivo = true;
            } else {
                accesible_inclusivo = false;
            }
            boolean familiar;
            String familiarStr = (String) FamiliarCombo.getSelectedItem();
            if (familiarStr.equals("Si")) {
                familiar = true;
            } else {
                familiar = false;
            }
            String url = txtURL.getText();
            String zonaGeo = txtZonaGeo.getText();
            String recomendaciones = txtRecomendacion.getText();
            String periodo = (String) PeriodosCombo.getSelectedItem();

            Ruta ruta = new Ruta(nombre, LocalDate.now(), longitudIni, latitudIni, longitudFin, latitudFin, distancia, duracion, latitudMax, longitudMax, clasificacion, desnivel, terreno, indicaciones,
                    accesible_inclusivo, familiar, url, recomendaciones, zonaGeo, user);
            if (!rutas.insertarRuta(ruta)) {
                JOptionPane.showMessageDialog(null, "Fallo al insertar ruta", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Ruta añadida correctamente", "ERROR", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Valor incorrecto", "", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnSubmitRutaActionPerformed

    private void btnBorrarRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarRutaActionPerformed
        int seleccion = TablaRutas.getSelectedRow();
        if (seleccion != -1) {
            String id_string = (String) TablaRutas.getValueAt(seleccion, 0);
            int id = Integer.parseInt(id_string);
            Ruta ruta = rutas.obtenerRutaPorId(id);
            if (!rutas.borrarRuta(ruta.getId_ruta())) {
                JOptionPane.showMessageDialog(null, "Fallo al borrar la ruta", "", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Ruta borrada con exito", "ERROR", JOptionPane.INFORMATION_MESSAGE);
            }
            cargarTablaRutas();
        }
    }//GEN-LAST:event_btnBorrarRutaActionPerformed

    private void btnSubmitModificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitModificacionActionPerformed
        int id = ruta.getId_ruta();
        String nombre = txtNomRuta.getText();
        try {
            Double longitudIni = Double.parseDouble(txtLongIni.getText());
            Double latitudIni = Double.parseDouble(txtLatIni.getText());
            Double longitudFin = Double.parseDouble(txtLongFinal.getText());
            Double latitudFin = Double.parseDouble(txtLatFin.getText());
            int distancia = Integer.parseInt(txtDistancia.getText());
            int duracion = Integer.parseInt(txtDuracion.getText());
            Double latitudMax = Double.parseDouble(txtLatMaxima.getText());
            Double longitudMax = Double.parseDouble(txtLongMaxima.getText());
            CLASIFICACION clasificacion;
            String clasificacionStr = (String) ClasificacionCombo.getSelectedItem();
            if (clasificacionStr.equals("Circular")) {
                clasificacion = CLASIFICACION.circular;
            } else {
                clasificacion = CLASIFICACION.lineal;
            }
            int desnivel = Integer.parseInt(txtDesnivel.getText());
            int terreno = Integer.parseInt((String) TerrenoCombo.getSelectedItem());
            int indicaciones = Integer.parseInt((String) IndicacionesCombo.getSelectedItem());
            boolean accesible_inclusivo;
            String accesible = (String) AccesibleCombo.getSelectedItem();
            if (accesible.equals("Si")) {
                accesible_inclusivo = true;
            } else {
                accesible_inclusivo = false;
            }
            boolean familiar;
            String familiarStr = (String) FamiliarCombo.getSelectedItem();
            if (familiarStr.equals("Si")) {
                familiar = true;
            } else {
                familiar = false;
            }
            String url = txtURL.getText();
            String zonaGeo = txtZonaGeo.getText();
            String recomendaciones = txtRecomendacion.getText();
            Ruta ruta1 = new Ruta(id, nombre, LocalDate.now(), longitudIni, latitudIni, longitudFin, latitudFin, distancia, duracion, latitudMax, longitudMax, clasificacion, desnivel, terreno, indicaciones,
                    accesible_inclusivo, familiar, url, recomendaciones, zonaGeo, user);
            ruta1.setValidada(ruta.isValidada());
            if (!rutas.modificaRuta(ruta1)) {
                JOptionPane.showMessageDialog(null, "Fallo al insertar ruta", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Ruta modificada", "ERROR", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Valor incorrecto", "", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSubmitModificacionActionPerformed

    private void btnModificaRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificaRutaActionPerformed

        int seleccion = TablaRutas.getSelectedRow();
        if (seleccion != -1) {
            String id_string = (String) TablaRutas.getValueAt(seleccion, 0);
            int id = Integer.parseInt(id_string);
            ruta = rutas.obtenerRutaPorId(id);
            PantallaCrearRuta.setVisible(true);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnSubmitModificacion.setVisible(true);
            btnSubmitRuta.setVisible(false);
            btnVolverCrearRuta.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Debes seleccionar una ruta", "", JOptionPane.NO_OPTION);
        }
    }//GEN-LAST:event_btnModificaRutaActionPerformed

    private void btnValoracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValoracionActionPerformed
        int seleccion = TablaRutas.getSelectedRow();
        if (seleccion != -1) {
            String id_string = (String) TablaRutas.getValueAt(seleccion, 0);
            int id = Integer.parseInt(id_string);
            ruta = rutas.obtenerRutaPorId(id);
            if (user instanceof Administrador || user instanceof Disenador_rutas || user instanceof Profesor) {
                PantallaCrearRuta.setVisible(false);
                PantallaMenu.setVisible(false);
                PantallaPrinci.setVisible(false);
                PantallaRegistro.setVisible(false);
                PantallaValidarRutas.setVisible(false);
                PantallaValidarUsuarios.setVisible(false);
                PantallaVerRutas.setVisible(false);
                PantallaValoracion.setVisible(true);
                PantallaResena.setVisible(false);
                PantallaPuntoInteres.setVisible(false);
                PantallaPuntoPeligro.setVisible(false);
            } else {
                PantallaCrearRuta.setVisible(false);
                PantallaMenu.setVisible(false);
                PantallaPrinci.setVisible(false);
                PantallaRegistro.setVisible(false);
                PantallaValidarRutas.setVisible(false);
                PantallaValidarUsuarios.setVisible(false);
                PantallaVerRutas.setVisible(false);
                PantallaValoracion.setVisible(true);
                PantallaResena.setVisible(false);
                PantallaPuntoInteres.setVisible(false);
                PantallaPuntoPeligro.setVisible(false);
                jLabel26.setVisible(false);
                txtValoracionTecnica.setVisible(false);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debes seleccionar una ruta", "", JOptionPane.NO_OPTION);
        }
    }//GEN-LAST:event_btnValoracionActionPerformed

    private void btnSubmitValoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitValoActionPerformed
        try {
            int dificultad = Integer.parseInt((String) valoDificutadCombo.getSelectedItem());
            int belleza = Integer.parseInt((String) valoBellezaCombo.getSelectedItem());
            int interes = Integer.parseInt((String) valoInteresCombo.getSelectedItem());
            String textValo = txtValoracion.getText();
            String textValoTecnica = txtValoracionTecnica.getText();
            Usuario usu = usuarios.obtenerUsuarioCreador(ruta.getId_ruta());
            boolean tecnica = false;
            if (user instanceof Administrador || user instanceof Disenador_rutas || user instanceof Profesor) {
                tecnica = true;
            }
            Valoracion valo = new Valoracion(ruta, usu, dificultad, belleza, interes, textValo, LocalDate.now(), tecnica, textValoTecnica);
            if (metodos.insertaValoracion(valo)) {
                JOptionPane.showMessageDialog(null, "Valoracion introducida", "", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo introducir la valoracion", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSubmitValoActionPerformed

    private void btnResenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResenaActionPerformed
        int seleccion = TablaRutas.getSelectedRow();
        if (seleccion != -1) {
            String id_string = (String) TablaRutas.getValueAt(seleccion, 0);
            int id = Integer.parseInt(id_string);
            ruta = rutas.obtenerRutaPorId(id);
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(true);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "Debes seleccionar una ruta", "", JOptionPane.NO_OPTION);
        }
    }//GEN-LAST:event_btnResenaActionPerformed

    private void btnSubmitResenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitResenaActionPerformed
        String resenatxt = txtResena.getText();
        Resena resena = new Resena(ruta, user, resenatxt);
        if (metodos.insertaResena(resena)) {
            JOptionPane.showMessageDialog(null, "Reseña añadida", "", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Fallo al añadir reseña", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSubmitResenaActionPerformed

    private void FiltroOrdenaComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltroOrdenaComboActionPerformed
        String seleccion = (String) FiltroOrdenaCombo.getSelectedItem();
        if (seleccion.equals("Riesgo")) {
            cargarTablaRutasRiesgo();
        } else if (seleccion.equals("Duracion")) {
            cargarTablaRutasDuracion();
        } else if (seleccion.equals("Distancia")) {
            cargarTablaRutasDistancia();
        } else if (seleccion.equals("Tipo")) {
            cargarTablaRutasTipo();
        } else if (seleccion.equals("Inclusivas")) {
            cargarTablaRutasInclusivas();
        } else if (seleccion.equals("No inclusivas")) {
            cargarTablaRutasNoInclusivas();
        } else if (seleccion.equals("Familiares")) {
            cargarTablaRutasFamiliares();
        } else if (seleccion.equals("No familiares")) {
            cargarTablaRutasNoFamiliares();
        }
    }//GEN-LAST:event_FiltroOrdenaComboActionPerformed

    private void btnPuntoInteresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPuntoInteresActionPerformed
        int seleccion = TablaRutas.getSelectedRow();
        if (seleccion != -1) {
            String id_string = (String) TablaRutas.getValueAt(seleccion, 0);
            int id = Integer.parseInt(id_string);
            ruta = rutas.obtenerRutaPorId(id);
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(true);
            PantallaPuntoPeligro.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "Debes seleccionar una ruta", "", JOptionPane.NO_OPTION);
        }
    }//GEN-LAST:event_btnPuntoInteresActionPerformed

    private void btnPuntoPeligroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPuntoPeligroActionPerformed
        int seleccion = TablaRutas.getSelectedRow();
        if (seleccion != -1) {
            String id_string = (String) TablaRutas.getValueAt(seleccion, 0);
            int id = Integer.parseInt(id_string);
            ruta = rutas.obtenerRutaPorId(id);
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Debes seleccionar una ruta", "", JOptionPane.NO_OPTION);
        }
    }//GEN-LAST:event_btnPuntoPeligroActionPerformed

    private void txtNomPuntoInteresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomPuntoInteresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomPuntoInteresActionPerformed

    private void txtNumPuntoInteresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumPuntoInteresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumPuntoInteresActionPerformed

    private void btnSubmitPuntoInteresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitPuntoInteresActionPerformed
        try {
            String nomPunto = txtNomPuntoInteres.getText();
            int ordenEnRuta = Integer.parseInt(txtNumPuntoInteres.getText());
            String fechaHora = txtFechaPuntoInteres.getText();
            fechaHora += " " + txtHoraPuntoInteres.getText();
            LocalDateTime timestamp = null;
            try {
                DateTimeFormatter formato = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
                timestamp = LocalDateTime.parse(fechaHora, formato);
            } catch (DateTimeParseException e) {
                JOptionPane.showMessageDialog(null, "Formato de fecha u hora incorrecto", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            double longitud = Double.parseDouble(txtLongitudPuntoInteres.getText());
            double latitud = Double.parseDouble(txtLatitudPuntoInteres.getText());
            String tipoPunto = (String) TipoPuntoInteresCombo.getSelectedItem();
            TIPO tipo = null;
            switch (tipoPunto) {
                case "Historico/Arqueologico" -> {
                    tipo = TIPO.historico_arqueologico;
                }
                case "Naturaleza" -> {
                    tipo = TIPO.naturaleza;
                }
                case "Mirador" -> {
                    tipo = TIPO.mirador;
                }
                case "Area de descanso" -> {
                    tipo = TIPO.area_de_descanso;
                }
                case "Punto de agua" -> {
                    tipo = TIPO.punto_de_agua;
                }
                case "Refugio/Alojamiento" -> {
                    tipo = TIPO.refugio_alojamiento;
                }
                case "Cultural" -> {
                    tipo = TIPO.cultural;
                }
                case "Geologico" -> {
                    tipo = TIPO.geologico;
                }
                case "Fauna especifica" -> {
                    tipo = TIPO.fauna_especifica;
                }
                case "Botanico" -> {
                    tipo = TIPO.botanico;
                }
            }
            String descripcion = txtDescripcionPuntoInteres.getText();
            String caracteristicas = txtCaracteristicasPuntoInteres.getText();
            Punto_interes pi = new Punto_interes(ordenEnRuta, nomPunto, timestamp, longitud, latitud, tipo, descripcion, caracteristicas);
            if (metodos.insertarPuntoInteres(pi, ruta)) {
                JOptionPane.showMessageDialog(null, "Punto introducido", "", JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Fallo al introducir Punto", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Valores introducidos incorrectos", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSubmitPuntoInteresActionPerformed

    private void txtNomPuntoPeligroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomPuntoPeligroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomPuntoPeligroActionPerformed

    private void txtNumPuntoPeligroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumPuntoPeligroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumPuntoPeligroActionPerformed

    private void btnSubmitPuntoPeligroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitPuntoPeligroActionPerformed
        try {
            String nomPunto = txtNomPuntoPeligro.getText();
            int ordenEnRuta = Integer.parseInt(txtNumPuntoPeligro.getText());
            String fechaHora = txtFechaPuntoPeligro.getText();
            fechaHora += " " + txtHoraPuntoPeligro.getText();
            LocalDateTime timestamp = null;
            try {
                DateTimeFormatter formato = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
                timestamp = LocalDateTime.parse(fechaHora, formato);
            } catch (DateTimeParseException e) {
                JOptionPane.showMessageDialog(null, "Formato de fecha u hora incorrecto", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            double longitud = Double.parseDouble(txtLongitudPuntoPeligro.getText());
            double latitud = Double.parseDouble(txtLatitudPuntoPeligro.getText());
            String descripcion = txtDescripcionPuntoPeligro.getText();
            int nivelGravedad = Integer.parseInt((String) nivelGravedadCombo.getSelectedItem());
            int km = Integer.parseInt(txtkmPuntoPeligro.getText());
            String descripGravedad = txtDescripcionGravedadPuntoPeligro.getText();
            Punto_peligro pp = new Punto_peligro(ordenEnRuta, nomPunto, timestamp, longitud, latitud, descripcion, km, nivelGravedad, descripGravedad);
            if (metodos.insertarPuntoPeligro(pp, ruta)) {
                JOptionPane.showMessageDialog(null, "Punto introducido", "", JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Fallo al introducir Punto", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Valores introducidos incorrectos", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSubmitPuntoPeligroActionPerformed

    private void btnInsertaActividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertaActividadActionPerformed
        int seleccion = TablaRutas.getSelectedRow();
        if (seleccion != -1) {
            String idStr = (String) TablaRutas.getValueAt(seleccion, 0);
            int id = Integer.parseInt(idStr);
            ruta = rutas.obtenerRutaPorId(id);
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaVerRutas.setVisible(true);
            DialogInsertarActividad.setVisible(true);
            DialogInsertarActividad.setLocationRelativeTo(null);
        } else {
            JOptionPane.showMessageDialog(null, "Debes seleccionar una ruta", "ERROR", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnInsertaActividadActionPerformed

    private void btnSubmitActividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActividadActionPerformed
        String nomActividad = txtNomActividad.getText();
        String descrActividad = txtDescripcionActividad.getText();
        Actividad actividad = new Actividad(nomActividad, descrActividad);
        if (metodos.insertarActividad(actividad, ruta)) {
            JOptionPane.showMessageDialog(null, "Actividad insertada", "ERROR", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "No se pudo insertar la actividad", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnSubmitActividadActionPerformed

    private void textPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textPasswordFocusGained
        textPassword.setText("");
    }//GEN-LAST:event_textPasswordFocusGained

    private void textPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPasswordActionPerformed

    }//GEN-LAST:event_textPasswordActionPerformed

    private void btnVolverResenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverResenaActionPerformed
        cargarTablaRutas();
        if (user instanceof Administrador) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(true);
            btnBorrarRuta.setVisible(true);
            btnModificaRuta.setVisible(true);
            btnPeriodo.setVisible(true);
            btnInsertaActividad.setVisible(true);
            btnResena.setVisible(true);
            btnValoracion.setVisible(true);
            btnPuntoPeligro.setVisible(true);
            btnPuntoInteres.setVisible(true);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
        } else {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(true);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnResena.setVisible(true);
            btnValoracion.setVisible(true);
            btnBorrarRuta.setVisible(false);
            btnModificaRuta.setVisible(false);
            btnPeriodo.setVisible(false);
            btnInsertaActividad.setVisible(false);
            btnPuntoPeligro.setVisible(false);
            btnPuntoInteres.setVisible(false);
        }
    }//GEN-LAST:event_btnVolverResenaActionPerformed

    private void btnVolverValoracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverValoracionActionPerformed
        cargarTablaRutas();
        if (user instanceof Administrador) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(true);
            btnBorrarRuta.setVisible(true);
            btnModificaRuta.setVisible(true);
            btnPeriodo.setVisible(true);
            btnInsertaActividad.setVisible(true);
            btnResena.setVisible(true);
            btnValoracion.setVisible(true);
            btnPuntoPeligro.setVisible(true);
            btnPuntoInteres.setVisible(true);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
        } else {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(true);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnResena.setVisible(true);
            btnValoracion.setVisible(true);
            btnBorrarRuta.setVisible(false);
            btnModificaRuta.setVisible(false);
            btnPeriodo.setVisible(false);
            btnInsertaActividad.setVisible(false);
            btnPuntoPeligro.setVisible(false);
            btnPuntoInteres.setVisible(false);
        }
    }//GEN-LAST:event_btnVolverValoracionActionPerformed

    private void PeriodosComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PeriodosComboActionPerformed


    }//GEN-LAST:event_PeriodosComboActionPerformed

    private void ClasificacionComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClasificacionComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClasificacionComboActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser elegirArchivo = new JFileChooser();
        int result = elegirArchivo.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File csvFile = elegirArchivo.getSelectedFile();
            ImportCSV.importar(csvFile, txtNomRuta, txtLatIni, txtLongIni, txtLatFin, txtLongFinal,
                    txtDistancia, txtDuracion, txtDesnivel, txtLatMaxima, txtLongMaxima, ClasificacionCombo);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnVolverPuntoInteresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverPuntoInteresActionPerformed
        cargarTablaRutas();
        if (user instanceof Administrador) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(true);
            btnBorrarRuta.setVisible(true);
            btnModificaRuta.setVisible(true);
            btnPeriodo.setVisible(true);
            btnInsertaActividad.setVisible(true);
            btnResena.setVisible(true);
            btnValoracion.setVisible(true);
            btnPuntoPeligro.setVisible(true);
            btnPuntoInteres.setVisible(true);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
        } else {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(true);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnResena.setVisible(true);
            btnValoracion.setVisible(true);
            btnBorrarRuta.setVisible(false);
            btnModificaRuta.setVisible(false);
            btnPeriodo.setVisible(false);
            btnInsertaActividad.setVisible(false);
            btnPuntoPeligro.setVisible(false);
            btnPuntoInteres.setVisible(false);
        }
    }//GEN-LAST:event_btnVolverPuntoInteresActionPerformed

    private void btnVolverPuntoPeligroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverPuntoPeligroActionPerformed
        cargarTablaRutas();
        if (user instanceof Administrador) {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(true);
            btnBorrarRuta.setVisible(true);
            btnModificaRuta.setVisible(true);
            btnPeriodo.setVisible(true);
            btnInsertaActividad.setVisible(true);
            btnResena.setVisible(true);
            btnValoracion.setVisible(true);
            btnPuntoPeligro.setVisible(true);
            btnPuntoInteres.setVisible(true);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
        } else {
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaVerRutas.setVisible(true);
            PantallaValoracion.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            btnResena.setVisible(true);
            btnValoracion.setVisible(true);
            btnBorrarRuta.setVisible(false);
            btnModificaRuta.setVisible(false);
            btnPeriodo.setVisible(false);
            btnInsertaActividad.setVisible(false);
            btnPuntoPeligro.setVisible(false);
            btnPuntoInteres.setVisible(false);
        }
    }//GEN-LAST:event_btnVolverPuntoPeligroActionPerformed

    private void btnListarPuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarPuntosActionPerformed
        int seleccion = TablaRutas.getSelectedRow();
        if (seleccion != -1) {
            String idStr = (String) TablaRutas.getValueAt(seleccion, 0);
            int id = Integer.parseInt(idStr);
            ruta = rutas.obtenerRutaPorId(id);
            PantallaCrearRuta.setVisible(false);
            PantallaMenu.setVisible(false);
            PantallaPrinci.setVisible(false);
            PantallaPuntoInteres.setVisible(false);
            PantallaPuntoPeligro.setVisible(false);
            PantallaRegistro.setVisible(false);
            PantallaResena.setVisible(false);
            PantallaValidarRutas.setVisible(false);
            PantallaValidarUsuarios.setVisible(false);
            PantallaValoracion.setVisible(false);
            PantallaVerRutas.setVisible(true);
            cargarTablaPuntosRuta();
            System.out.println("Filas visibles en la tabla: " + TablaPuntosRuta.getRowCount());
            DialogPuntosRuta.setLocationRelativeTo(null);
            DialogPuntosRuta.setVisible(true);
            LabelNomRuta.setText(ruta.getNombre());
        } else {
            JOptionPane.showMessageDialog(null, "Debes seleccionar una ruta", "ERROR", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnListarPuntosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaPrincipal().setVisible(true);
            }
        });
    }

    public void cargarTablaRutas() {
        ArrayList<Ruta> listarutas = rutas.rutasValidadas();
        TablaRutas.removeAll();
        String[] columnas = {"ID", "Nombre", "Distancia", "Duracion", "Clasificacion", "Nivel de riesgo", "Nivel de esfuerzo", "Desnivel acumulado", "Tipo de terreno", "Valoracion media"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        TablaRutas.setModel(modelo);
        TablaRutas.repaint();
        TablaRutas.getColumnModel().getColumn(0).setMinWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setMaxWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setWidth(0);
        for (Ruta r : listarutas) {
            String[] datos = {String.valueOf(r.getId_ruta()), r.getNombre(), String.valueOf(r.getDistancia_total()), String.valueOf(r.getDuracion()), r.getClasificacion().toString(),
                String.valueOf(r.getNivel_riesgo()), String.valueOf(r.getNivel_esfuerzo()), String.valueOf(r.getDesnivel_acumulado()),
                String.valueOf(r.getTipo_terreno()), String.valueOf(r.getValoracion_media())};
            modelo.addRow(datos);
        }

    }

    public void cargaComboPeriodos() {
        PeriodosCombo.removeAllItems();
        LinkedList<Periodo> periodos = metodos.listaPeriodos();
        for (Periodo p : periodos) {
            PeriodosCombo.addItem(p.getNom_periodo());
        }
    }

    public void cargarTablaRutasNoValidadas() {
        ArrayList<Ruta> noValidadas = rutas.rutasNoValidadas();
        TablaRutasNoValidadas.removeAll();
        String[] columnas = {"ID", "Nombre", "Distancia", "Duracion", "Clasificacion", "Nivel de riesgo", "Nivel de esfuerzo", "Desnivel acumulado", "Tipo de terreno", "Valoracion media"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        TablaRutasNoValidadas.setModel(modelo);
        TablaRutas.repaint();
        TablaRutasNoValidadas.getColumnModel().getColumn(0).setMinWidth(0);
        TablaRutasNoValidadas.getColumnModel().getColumn(0).setMaxWidth(0);
        TablaRutasNoValidadas.getColumnModel().getColumn(0).setWidth(0);
        for (Ruta r : noValidadas) {
            String[] datos = {String.valueOf(r.getId_ruta()), r.getNombre(), String.valueOf(r.getDistancia_total()), String.valueOf(r.getDuracion()), r.getClasificacion().toString(),
                String.valueOf(r.getNivel_riesgo()), String.valueOf(r.getNivel_esfuerzo()), String.valueOf(r.getDesnivel_acumulado()),
                String.valueOf(r.getTipo_terreno()), String.valueOf(r.getValoracion_media())};;
            modelo.addRow(datos);
        }
    }

    public void cargarTablaUsuariosNoValidados() {
        ArrayList<Usuario> noValidados = usuarios.listarUsuariosNoValidados();
        TablaUsuarios.removeAll();
        String[] columnas = {"Nombre", "Apellidos", "Fecha de nacimiento", "Rol del usuario"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        TablaUsuarios.setModel(modelo);
        TablaRutas.repaint();
        TablaUsuarios.getColumnModel().getColumn(0).setMinWidth(0);
        TablaUsuarios.getColumnModel().getColumn(0).setMaxWidth(0);
        TablaUsuarios.getColumnModel().getColumn(0).setWidth(0);
        for (Usuario usu : noValidados) {
            String[] datos = {String.valueOf(usu.getId()), usu.getNombre(), usu.getApellidos(), usu.getFecha_nac().toString(), usu.getRol().toString()};
            modelo.addRow(datos);
        }
    }

    public void cargarTablaRutasRiesgo() {
        ArrayList<Ruta> rutasPorRiesgo = rutas.rutasValidadas();
        rutasPorRiesgo.sort(Comparator.comparingInt(Ruta::getNivel_riesgo));
        TablaRutas.removeAll();
        String[] columnas = {"ID", "Nombre", "Distancia", "Duracion", "Clasificacion", "Nivel de riesgo", "Nivel de esfuerzo", "Desnivel acumulado", "Tipo de terreno", "Valoracion media"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        TablaRutas.setModel(modelo);
        TablaRutas.repaint();
        TablaRutas.getColumnModel().getColumn(0).setMinWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setMaxWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setWidth(0);
        for (Ruta r : rutasPorRiesgo) {
            String[] datos = {String.valueOf(r.getId_ruta()), r.getNombre(), String.valueOf(r.getDistancia_total()), String.valueOf(r.getDuracion()), r.getClasificacion().toString(),
                String.valueOf(r.getNivel_riesgo()), String.valueOf(r.getNivel_esfuerzo()), String.valueOf(r.getDesnivel_acumulado()),
                String.valueOf(r.getTipo_terreno()), String.valueOf(r.getValoracion_media())};
            modelo.addRow(datos);
        }
    }

    public void cargarTablaRutasDuracion() {
        ArrayList<Ruta> rutasPorDuracion = rutas.rutasValidadas();
        rutasPorDuracion.sort(Comparator.comparingInt(Ruta::getDuracion));
        TablaRutas.removeAll();
        String[] columnas = {"ID", "Nombre", "Distancia", "Duracion", "Clasificacion", "Nivel de riesgo", "Nivel de esfuerzo", "Desnivel acumulado", "Tipo de terreno", "Valoracion media"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        TablaRutas.setModel(modelo);
        TablaRutas.repaint();
        TablaRutas.getColumnModel().getColumn(0).setMinWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setMaxWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setWidth(0);
        for (Ruta r : rutasPorDuracion) {
            String[] datos = {String.valueOf(r.getId_ruta()), r.getNombre(), String.valueOf(r.getDistancia_total()), String.valueOf(r.getDuracion()), r.getClasificacion().toString(),
                String.valueOf(r.getNivel_riesgo()), String.valueOf(r.getNivel_esfuerzo()), String.valueOf(r.getDesnivel_acumulado()),
                String.valueOf(r.getTipo_terreno()), String.valueOf(r.getValoracion_media())};
            modelo.addRow(datos);
        }
    }

    public void cargarTablaRutasDistancia() {
        ArrayList<Ruta> rutasPorDistancia = rutas.rutasValidadas();
        rutasPorDistancia.sort(Comparator.comparingInt(Ruta::getDistancia_total));
        TablaRutas.removeAll();
        String[] columnas = {"ID", "Nombre", "Distancia", "Duracion", "Clasificacion", "Nivel de riesgo", "Nivel de esfuerzo", "Desnivel acumulado", "Tipo de terreno", "Valoracion media"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        TablaRutas.setModel(modelo);
        TablaRutas.repaint();
        TablaRutas.getColumnModel().getColumn(0).setMinWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setMaxWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setWidth(0);
        for (Ruta r : rutasPorDistancia) {
            String[] datos = {String.valueOf(r.getId_ruta()), r.getNombre(), String.valueOf(r.getDistancia_total()), String.valueOf(r.getDuracion()), r.getClasificacion().toString(),
                String.valueOf(r.getNivel_riesgo()), String.valueOf(r.getNivel_esfuerzo()), String.valueOf(r.getDesnivel_acumulado()),
                String.valueOf(r.getTipo_terreno()), String.valueOf(r.getValoracion_media())};
            modelo.addRow(datos);
        }
    }

    public void cargarTablaRutasTipo() {
        ArrayList<Ruta> rutasPorClasificacion = rutas.rutasValidadas();
        Comparator<Ruta> comparador = new Comparator<Ruta>() {
            @Override
            public int compare(Ruta r1, Ruta r2) {
                return r1.getClasificacion().compareTo(r2.getClasificacion());
            }
        };
        rutasPorClasificacion.sort(comparador);
        TablaRutas.removeAll();
        String[] columnas = {"ID", "Nombre", "Distancia", "Duracion", "Clasificacion", "Nivel de riesgo", "Nivel de esfuerzo", "Desnivel acumulado", "Tipo de terreno", "Valoracion media"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        TablaRutas.setModel(modelo);
        TablaRutas.repaint();
        TablaRutas.getColumnModel().getColumn(0).setMinWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setMaxWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setWidth(0);
        for (Ruta r : rutasPorClasificacion) {
            String[] datos = {String.valueOf(r.getId_ruta()), r.getNombre(), String.valueOf(r.getDistancia_total()), String.valueOf(r.getDuracion()), r.getClasificacion().toString(),
                String.valueOf(r.getNivel_riesgo()), String.valueOf(r.getNivel_esfuerzo()), String.valueOf(r.getDesnivel_acumulado()),
                String.valueOf(r.getTipo_terreno()), String.valueOf(r.getValoracion_media())};
            modelo.addRow(datos);
        }
    }

    public void cargarTablaRutasInclusivas() {
        ArrayList<Ruta> rutasInclusivas = rutas.rutasValidadas();
        TablaRutas.removeAll();
        String[] columnas = {"ID", "Nombre", "Distancia", "Duracion", "Clasificacion", "Nivel de riesgo", "Nivel de esfuerzo", "Desnivel acumulado", "Tipo de terreno", "Valoracion media"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        TablaRutas.setModel(modelo);
        TablaRutas.repaint();
        TablaRutas.getColumnModel().getColumn(0).setMinWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setMaxWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setWidth(0);
        for (Ruta r : rutasInclusivas) {
            if (r.isAccesible_inclusivo()) {
                String[] datos = {String.valueOf(r.getId_ruta()), r.getNombre(), String.valueOf(r.getDistancia_total()), String.valueOf(r.getDuracion()), r.getClasificacion().toString(),
                    String.valueOf(r.getNivel_riesgo()), String.valueOf(r.getNivel_esfuerzo()), String.valueOf(r.getDesnivel_acumulado()),
                    String.valueOf(r.getTipo_terreno()), String.valueOf(r.getValoracion_media())};
                modelo.addRow(datos);
            }
        }
    }

    public void cargarTablaRutasNoInclusivas() {
        ArrayList<Ruta> rutasNoInclusivas = rutas.rutasValidadas();
        TablaRutas.removeAll();
        String[] columnas = {"ID", "Nombre", "Distancia", "Duracion", "Clasificacion", "Nivel de riesgo", "Nivel de esfuerzo", "Desnivel acumulado", "Tipo de terreno", "Valoracion media"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        TablaRutas.setModel(modelo);
        TablaRutas.repaint();
        TablaRutas.getColumnModel().getColumn(0).setMinWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setMaxWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setWidth(0);
        for (Ruta r : rutasNoInclusivas) {
            if (!r.isAccesible_inclusivo()) {
                String[] datos = {String.valueOf(r.getId_ruta()), r.getNombre(), String.valueOf(r.getDistancia_total()), String.valueOf(r.getDuracion()), r.getClasificacion().toString(),
                    String.valueOf(r.getNivel_riesgo()), String.valueOf(r.getNivel_esfuerzo()), String.valueOf(r.getDesnivel_acumulado()),
                    String.valueOf(r.getTipo_terreno()), String.valueOf(r.getValoracion_media())};
                modelo.addRow(datos);
            }
        }
    }

    public void cargarTablaRutasFamiliares() {
        ArrayList<Ruta> rutasFamiliares = rutas.rutasValidadas();
        TablaRutas.removeAll();
        String[] columnas = {"ID", "Nombre", "Distancia", "Duracion", "Clasificacion", "Nivel de riesgo", "Nivel de esfuerzo", "Desnivel acumulado", "Tipo de terreno", "Valoracion media"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        TablaRutas.setModel(modelo);
        TablaRutas.repaint();
        TablaRutas.getColumnModel().getColumn(0).setMinWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setMaxWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setWidth(0);
        for (Ruta r : rutasFamiliares) {
            if (r.isFamiliar()) {
                String[] datos = {String.valueOf(r.getId_ruta()), r.getNombre(), String.valueOf(r.getDistancia_total()), String.valueOf(r.getDuracion()), r.getClasificacion().toString(),
                    String.valueOf(r.getNivel_riesgo()), String.valueOf(r.getNivel_esfuerzo()), String.valueOf(r.getDesnivel_acumulado()),
                    String.valueOf(r.getTipo_terreno()), String.valueOf(r.getValoracion_media())};
                modelo.addRow(datos);
            }
        }
    }

    public void cargarTablaRutasNoFamiliares() {
        ArrayList<Ruta> rutasNoFamiliares = rutas.rutasValidadas();
        TablaRutas.removeAll();
        String[] columnas = {"ID", "Nombre", "Distancia", "Duracion", "Clasificacion", "Nivel de riesgo", "Nivel de esfuerzo", "Desnivel acumulado", "Tipo de terreno", "Valoracion media"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        TablaRutas.setModel(modelo);
        TablaRutas.repaint();
        TablaRutas.getColumnModel().getColumn(0).setMinWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setMaxWidth(0);
        TablaRutas.getColumnModel().getColumn(0).setWidth(0);
        for (Ruta r : rutasNoFamiliares) {
            if (!r.isFamiliar()) {
                String[] datos = {String.valueOf(r.getId_ruta()), r.getNombre(), String.valueOf(r.getDistancia_total()), String.valueOf(r.getDuracion()), r.getClasificacion().toString(),
                    String.valueOf(r.getNivel_riesgo()), String.valueOf(r.getNivel_esfuerzo()), String.valueOf(r.getDesnivel_acumulado()),
                    String.valueOf(r.getTipo_terreno()), String.valueOf(r.getValoracion_media())};
                modelo.addRow(datos);
            }
        }
    }

    public void cargarTablaPuntosRuta() {
        TreeSet<Puntos_ruta> puntos = metodos.listarPuntosRuta(ruta);
        System.out.println("Número de puntos encontrados: " + puntos.size());
        String[] columnas = {"ID", "Nombre", "Longitud", "Latitud", "Descripcion", "Tipo"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        TablaPuntosRuta.setModel(modelo);
        TablaPuntosRuta.repaint();
        TablaPuntosRuta.getColumnModel().getColumn(0).setMinWidth(0);
        TablaPuntosRuta.getColumnModel().getColumn(0).setMaxWidth(0);
        TablaPuntosRuta.getColumnModel().getColumn(0).setWidth(0);
        String tipoPunto = "";
        for (Puntos_ruta p : puntos) {
            if (p instanceof Punto_peligro) {
                tipoPunto = "Punto de Peligro";
            } else {
                tipoPunto = "Punto de Interés";
            }
            String[] datos = {String.valueOf(p.getId_pr()), p.getNombre(), String.valueOf(p.getLongitud()), String.valueOf(p.getLatitud()),
                p.getDescripcion(), tipoPunto};
            modelo.addRow(datos);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> AccesibleCombo;
    private javax.swing.JComboBox<String> ClasificacionCombo;
    private javax.swing.JDialog DialogInsertarActividad;
    private javax.swing.JDialog DialogInsertarPeriodo;
    private javax.swing.JDialog DialogPuntosRuta;
    private javax.swing.JComboBox<String> FamiliarCombo;
    private javax.swing.JComboBox<String> FiltroOrdenaCombo;
    private javax.swing.JComboBox<String> IndicacionesCombo;
    private javax.swing.JLabel LabelNomRuta;
    private javax.swing.JPanel PantallaCrearRuta;
    private javax.swing.JPanel PantallaMenu;
    private javax.swing.JPanel PantallaPrinci;
    private javax.swing.JPanel PantallaPuntoInteres;
    private javax.swing.JPanel PantallaPuntoPeligro;
    private javax.swing.JPanel PantallaRegistro;
    private javax.swing.JPanel PantallaResena;
    private javax.swing.JPanel PantallaValidarRutas;
    private javax.swing.JPanel PantallaValidarUsuarios;
    private javax.swing.JPanel PantallaValoracion;
    private javax.swing.JPanel PantallaVerRutas;
    private javax.swing.JComboBox<String> PeriodosCombo;
    private javax.swing.JTable TablaPuntosRuta;
    private javax.swing.JTable TablaRutas;
    private javax.swing.JTable TablaRutasNoValidadas;
    private javax.swing.JTable TablaUsuarios;
    private javax.swing.JComboBox<String> TerrenoCombo;
    private javax.swing.JComboBox<String> TipoPuntoInteresCombo;
    private javax.swing.JButton btnBorrarRuta;
    private javax.swing.JButton btnCrearCalendar;
    private javax.swing.JButton btnCrearRuta;
    private javax.swing.JButton btnDescargarFicha;
    private javax.swing.JButton btnEnviarInicioSesion;
    private javax.swing.JButton btnIniciarSesion;
    private javax.swing.JButton btnInsertaActividad;
    private javax.swing.JButton btnListarPuntos;
    private javax.swing.JButton btnModificaRuta;
    private javax.swing.JButton btnPeriodo;
    private javax.swing.JButton btnPuntoInteres;
    private javax.swing.JButton btnPuntoPeligro;
    private javax.swing.JButton btnResena;
    private javax.swing.JButton btnSubmitActividad;
    private javax.swing.JButton btnSubmitModificacion;
    private javax.swing.JButton btnSubmitPuntoInteres;
    private javax.swing.JButton btnSubmitPuntoPeligro;
    private javax.swing.JButton btnSubmitResena;
    private javax.swing.JButton btnSubmitRuta;
    private javax.swing.JButton btnSubmitValo;
    private javax.swing.JButton btnValidaRUTA;
    private javax.swing.JButton btnValidarRuta;
    private javax.swing.JButton btnValidarUsuario;
    private javax.swing.JButton btnValidarUsuarios;
    private javax.swing.JButton btnValoracion;
    private javax.swing.JButton btnVerRuta2;
    private javax.swing.JButton btnVerRutas;
    private javax.swing.JButton btnVolverCrearRuta;
    private javax.swing.JButton btnVolverPuntoInteres;
    private javax.swing.JButton btnVolverPuntoPeligro;
    private javax.swing.JButton btnVolverResena;
    private javax.swing.JButton btnVolverValidaRutas;
    private javax.swing.JButton btnVolverValidaUsuario;
    private javax.swing.JButton btnVolverValoracion;
    private javax.swing.JButton btnVolverVerRutas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JComboBox<String> nivelGravedadCombo;
    private javax.swing.JPasswordField textPassword;
    private javax.swing.JTextField textUsuario;
    private javax.swing.JTextArea txtCaracteristicasPuntoInteres;
    private javax.swing.JTextArea txtDescripcionActividad;
    private javax.swing.JTextArea txtDescripcionGravedadPuntoPeligro;
    private javax.swing.JTextArea txtDescripcionPuntoInteres;
    private javax.swing.JTextArea txtDescripcionPuntoPeligro;
    private javax.swing.JTextField txtDesnivel;
    private javax.swing.JTextField txtDistancia;
    private javax.swing.JTextField txtDuracion;
    private javax.swing.JTextField txtFechaPuntoInteres;
    private javax.swing.JTextField txtFechaPuntoPeligro;
    private javax.swing.JTextField txtHoraPuntoInteres;
    private javax.swing.JTextField txtHoraPuntoPeligro;
    private javax.swing.JTextField txtLatFin;
    private javax.swing.JTextField txtLatIni;
    private javax.swing.JTextField txtLatMaxima;
    private javax.swing.JTextField txtLatitudPuntoInteres;
    private javax.swing.JTextField txtLatitudPuntoPeligro;
    private javax.swing.JTextField txtLongFinal;
    private javax.swing.JTextField txtLongIni;
    private javax.swing.JTextField txtLongMaxima;
    private javax.swing.JTextField txtLongitudPuntoInteres;
    private javax.swing.JTextField txtLongitudPuntoPeligro;
    private javax.swing.JTextField txtNomActividad;
    private javax.swing.JTextField txtNomPuntoInteres;
    private javax.swing.JTextField txtNomPuntoPeligro;
    private javax.swing.JTextField txtNomRuta;
    private javax.swing.JTextField txtNumPuntoInteres;
    private javax.swing.JTextField txtNumPuntoPeligro;
    private javax.swing.JTextArea txtRecomendacion;
    private javax.swing.JTextArea txtResena;
    private javax.swing.JTextField txtURL;
    private javax.swing.JTextArea txtValoracion;
    private javax.swing.JTextArea txtValoracionTecnica;
    private javax.swing.JTextField txtZonaGeo;
    private javax.swing.JTextField txtkmPuntoPeligro;
    private javax.swing.JComboBox<String> valoBellezaCombo;
    private javax.swing.JComboBox<String> valoDificutadCombo;
    private javax.swing.JComboBox<String> valoInteresCombo;
    // End of variables declaration//GEN-END:variables
}
